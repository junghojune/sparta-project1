package com.sparta.project.delivery.category.controller;import com.sparta.project.delivery.category.dto.CategoryRequest;import com.sparta.project.delivery.category.dto.CategoryResponse;import com.sparta.project.delivery.category.service.CategoryService;import io.swagger.v3.oas.annotations.Operation;import io.swagger.v3.oas.annotations.tags.Tag;import lombok.RequiredArgsConstructor;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.data.domain.Sort;import org.springframework.data.web.PageableDefault;import org.springframework.web.bind.annotation.*;@RequiredArgsConstructor@RestController@RequestMapping("/api/category")@Tag(name = "Category API", description = "카테고리를 추가 수정 조회 할 수 있는 API 입니다.")public class CategoryController {    private final CategoryService categoryService;    @GetMapping    @Operation(summary = "category 조회 API", description = "Category 정보를 조회합니다.")    public Page<CategoryResponse> getCategories(            @PageableDefault(size = 10, sort = "name", direction = Sort.Direction.ASC) Pageable pageable    ){        return categoryService.getCategories(pageable).map(CategoryResponse::from);    }    @PostMapping    public String addCategory(@RequestBody CategoryRequest request){        categoryService.addCategory(request.toDto());        return "category  create successfully";    }    @DeleteMapping("/{categoryId}/delete")    public String deleteCategory(@PathVariable("categoryId") String categoryId){        categoryService.deleteCategory(categoryId);        return "category delete successfully";    }    @PutMapping("/{categoryId}/update")    public void updateCategory(@PathVariable("categoryId") String categoryId, @RequestBody CategoryRequest request){        categoryService.updateCategory(categoryId, request.toDto());    }}